name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Build library
      run: ./gradlew :gradientprogressbar:assembleRelease
      
    - name: Generate AAR
      run: ./gradlew :gradientprogressbar:bundleReleaseAar
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Upload AAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: gradientprogressbar/build/outputs/aar/gradientprogressbar-release.aar
        asset_name: gradient-progressbar-${{ github.ref_name }}.aar
        asset_content_type: application/octet-stream
        
    # Uncomment when ready to publish to Maven Central
    # - name: Publish to Maven Central
    #   run: ./gradlew publishReleasePublicationToSonatypeRepository
    #   env:
    #     OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
    #     OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
    #     SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
    #     SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
    #     SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}